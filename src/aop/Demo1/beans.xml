<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean name="studentService" class="aop.Demo1.StudentService"></bean>
	<!-- 定义一个切面类,id为aop -->
	<bean id="aop" class="aop.Demo1.StudentServiceAspect"></bean>
	<aop:config>
		<!-- 定义一个切入点表达式: 拦截哪些方法 -->
		<aop:pointcut id="pointcut" expression="execution(* aop.Demo1.StudentService.*(..))"></aop:pointcut>

		<!-- 定义切面,引用上面的切面类 -->
		<aop:aspect ref="aop">
			<!-- 前置通知: 在引用的pointcut(切点)之前调用切面类的doBefore方法 -->
			<aop:before method="doBefore" pointcut-ref="pointcut"></aop:before>

			<!-- 后置通知: 在引用的pointcut(切点)之后调用切面类的doBefore方法 -->
			<aop:after method="doAfter" pointcut-ref="pointcut"></aop:after>

			<!-- 环绕通知: 在引用的pointcut(切点)的前后调用切面类的doAround方法 -->
			<aop:around method="doAround" pointcut-ref="pointcut"></aop:around>

			<!-- 返回通知: 在引用的pointcut(切点)的方法返回之前调用切面类的doAfterReturning方法 -->
			<aop:after-returning method="doAfterReturning" pointcut-ref="pointcut"></aop:after-returning>

			<!-- 异常通知: 在引用的pointcut(切点)的方法抛出异常时调用切面类的doAfterThrowing方法 -->
			<aop:after-throwing method="doAfterThrowing" pointcut-ref="pointcut" throwing="ex"></aop:after-throwing>
		</aop:aspect>
	</aop:config>
</beans>